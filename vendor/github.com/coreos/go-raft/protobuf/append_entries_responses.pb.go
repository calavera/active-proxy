// Code generated by protoc-gen-go.
// source: append_entries_responses.proto
// DO NOT EDIT!

package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ProtoAppendEntriesResponse struct {
	Term             *uint64 `protobuf:"varint,1,req" json:"Term,omitempty"`
	Index            *uint64 `protobuf:"varint,2,req" json:"Index,omitempty"`
	CommitIndex      *uint64 `protobuf:"varint,3,req" json:"CommitIndex,omitempty"`
	Success          *bool   `protobuf:"varint,4,req" json:"Success,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoAppendEntriesResponse) Reset()         { *m = ProtoAppendEntriesResponse{} }
func (m *ProtoAppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ProtoAppendEntriesResponse) ProtoMessage()    {}

func (m *ProtoAppendEntriesResponse) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *ProtoAppendEntriesResponse) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ProtoAppendEntriesResponse) GetCommitIndex() uint64 {
	if m != nil && m.CommitIndex != nil {
		return *m.CommitIndex
	}
	return 0
}

func (m *ProtoAppendEntriesResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func init() {
}
